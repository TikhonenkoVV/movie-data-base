{"version":3,"file":"static/js/61.cbb744f2.chunk.js","mappings":"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","sources":["common/services/setNumberForm.js","ui/pages/PersonDetails/PersonInfo/PersonInfo.styled.js","ui/pages/PersonDetails/PersonInfo/Credits/Credits.styled.js","ui/pages/PersonDetails/PersonInfo/Credits/CreditsItem/CreditsItem.styled.js","ui/pages/PersonDetails/PersonInfo/Credits/CreditsItem/CreditsItem.jsx","ui/pages/PersonDetails/PersonInfo/Credits/Credits.jsx","common/services/normalize/normalizeActing.js","common/services/normalize/normalizePersonInCrew.js","ui/pages/PersonDetails/PersonInfo/PersonInfo.jsx","ui/pages/PersonDetails/PersonDetails.jsx","common/services/normalize/normalizePersonData.js"],"sourcesContent":["export const setNumberForm = (n, language) => {\n    if (language === 'uk-UA') {\n        const titles = ['рік', 'роки', 'років'];\n        return titles[\n            n % 10 === 1 && n % 100 !== 11\n                ? 0\n                : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20)\n                ? 1\n                : 2\n        ];\n    } else return 'years old';\n};\n","import styled from '@emotion/styled';\n\nexport const PersonWrapper = styled.div`\n    color: ${({ theme }) => theme.colors.themeText};\n    @media ${({ theme }) => theme.breakpoints.l} {\n        display: flex;\n        align-items: flex-start;\n        gap: 24px;\n    }\n`;\n\nexport const PersonTitle = styled.h1`\n    font-size: 36px;\n    &.minor {\n        margin-bottom: 16px;\n        @media ${({ theme }) => theme.breakpoints.l} {\n            display: none;\n        }\n    }\n    &.major {\n        display: none;\n        margin-bottom: 40px;\n        @media ${({ theme }) => theme.breakpoints.l} {\n            display: block;\n        }\n    }\n`;\n\nexport const Aside = styled.aside`\n    flex-shrink: 0;\n    margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n    padding: ${({ theme }) => theme.spacing.retreatS};\n    background-color: ${({ theme }) => theme.colors.mediumBackground};\n    @media ${({ theme }) => theme.breakpoints.fromXsTillL} {\n        display: flex;\n        justify-content: start;\n        align-items: start;\n        gap: ${({ theme }) => theme.spacing.retreatS};\n    }\n    @media ${({ theme }) => theme.breakpoints.s} {\n        padding: ${({ theme }) => theme.spacing.retreatM};\n    }\n    @media ${({ theme }) => theme.breakpoints.l} {\n        width: 290px;\n    }\n    @media ${({ theme }) => theme.breakpoints.xl} {\n        width: 352px;\n        padding: ${({ theme }) => theme.spacing.retreatL};\n    }\n`;\n\nexport const PersonPhoto = styled.img`\n    width: 200px;\n    aspect-ratio: 2 / 3;\n    object-fit: cover;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n    @media ${({ theme }) => theme.breakpoints.fromXsTillL} {\n        flex-shrink: 0;\n        margin-bottom: 0;\n    }\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        margin-left: 0;\n        margin-right: 0;\n    }\n    @media ${({ theme }) => theme.breakpoints.s} {\n        width: 250px;\n    }\n    @media ${({ theme }) => theme.breakpoints.xl} {\n        width: 300px;\n    }\n`;\n\nexport const AsideTitle = styled.h2`\n    margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n    &::first-letter {\n        text-transform: uppercase;\n    }\n`;\n\nexport const PersonalInfoList = styled.ul``;\n\nexport const PersonalInfoItem = styled.li`\n    &:not(:last-child) {\n        margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n    }\n`;\n\nexport const MinorTitle = styled.h3`\n    margin-bottom: 8px;\n    &::first-letter {\n        text-transform: uppercase;\n    }\n`;\n\nexport const Description = styled.p`\n    &::first-letter {\n        text-transform: uppercase;\n    }\n`;\nexport const InfoWrapper = styled.div`\n    @media ${({ theme }) => theme.breakpoints.s} {\n        flex-grow: 1;\n    }\n`;\n\nexport const ProfileWrapper = styled.div`\n    margin-bottom: 40px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n    margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n    &::first-letter {\n        text-transform: uppercase;\n    }\n`;\n\nexport const CreditsList = styled.ul`\n    padding: ${({ theme }) => theme.spacing.retreatS};\n    border: 1px solid gray;\n    &:not(:last-child) {\n        margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n    }\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n    &:not(:last-child) {\n        margin-bottom: 16px;\n    }\n`;\n\nexport const StyledLink = styled(Link)`\n    display: flex;\n    gap: 16px;\n`;\n\nexport const ImageWrapper = styled.div`\n    flex-shrink: 0;\n    width: 70px;\n    height: 105px;\n    overflow: hidden;\n`;\n\nexport const Title = styled.h3`\n    margin-bottom: 12px;\n`;\n\nexport const Description = styled.p`\n    &::first-letter {\n        text-transform: uppercase;\n    }\n`;\n","import {\n    Description,\n    ImageWrapper,\n    Item,\n    StyledLink,\n    Title,\n} from './CreditsItem.styled';\nimport noPoster from '../../../../../assets/images/no-poster.jpg';\nimport { POSTER_W185 } from 'common/constants';\nimport { useTranslate } from 'hooks/useTranslate';\n\nexport const CreditsItem = ({ credits }) => {\n    const { t } = useTranslate();\n\n    return credits?.map(\n        ({\n            id,\n            credit_id,\n            poster_path,\n            movieTitle,\n            personCharacter,\n            releaseDate,\n            media_type,\n            vote_average,\n        }) => (\n            <Item key={credit_id}>\n                <StyledLink\n                    to={\n                        media_type === 'movie'\n                            ? `/movies/movie-${id}`\n                            : `/tv-shows/tv-${id}`\n                    }\n                    state={{ mediaTypes: media_type }}\n                >\n                    <ImageWrapper>\n                        <img\n                            style={{\n                                aspectRatio: '2/3',\n                                objectFit: 'cover',\n                            }}\n                            width={70}\n                            height={105}\n                            src={\n                                poster_path\n                                    ? POSTER_W185 + poster_path\n                                    : noPoster\n                            }\n                            alt={movieTitle}\n                        />\n                    </ImageWrapper>\n                    <div>\n                        <Title>{movieTitle}</Title>\n                        {personCharacter && (\n                            <Description>\n                                {t('character')}: {personCharacter}\n                            </Description>\n                        )}\n                        <Description>\n                            {t('year')}: {releaseDate}\n                        </Description>\n                        <Description>\n                            {t('score')}: {vote_average}\n                        </Description>\n                    </div>\n                </StyledLink>\n            </Item>\n        )\n    );\n};\n","import { CreditsList, Title } from './Credits.styled';\nimport { normalizeActing } from 'common/services/normalize/normalizeActing';\nimport { normalizePersonInCrew } from 'common/services/normalize/normalizePersonInCrew';\nimport { CreditsItem } from './CreditsItem/CreditsItem';\nimport { useTranslate } from 'hooks/useTranslate';\n\nexport const Credits = ({ acting, crew }) => {\n    const { t } = useTranslate();\n\n    const personActing = normalizeActing(acting);\n    const personInCrew = normalizePersonInCrew(crew);\n\n    return (\n        <>\n            {personActing?.length > 0 && (\n                <>\n                    <Title>{t('acting')}</Title>\n                    <CreditsList>\n                        <CreditsItem credits={personActing} />\n                    </CreditsList>\n                </>\n            )}\n            {personInCrew?.length > 0 && (\n                <>\n                    <Title>{t('crew_a')}</Title>\n                    {personInCrew?.map((el, i) => (\n                        <CreditsList key={i}>\n                            <li>\n                                <Title>{Object.keys(el)[0]}</Title>\n                                <ul>\n                                    <CreditsItem\n                                        credits={el[Object.keys(el)]}\n                                    />\n                                </ul>\n                            </li>\n                        </CreditsList>\n                    ))}\n                </>\n            )}\n        </>\n    );\n};\n","export const normalizeActing = data => {\n    const nA = 'N/a';\n    let futureDate = new Date();\n    futureDate = new Date(futureDate.getTime() + 1000 * 60 * 60 * 24 * 730);\n    const res = data.map(\n        ({\n            id,\n            credit_id,\n            poster_path,\n            title,\n            original_title,\n            name,\n            original_name,\n            character,\n            release_date,\n            vote_average,\n            first_air_date,\n            media_type,\n        }) => {\n            const movieTitle = title\n                ? title\n                : name\n                ? name\n                : original_title\n                ? original_title\n                : original_name;\n            const personCharacter = character ? character : nA;\n            let releaseDate = release_date\n                ? release_date\n                : first_air_date\n                ? first_air_date\n                : nA;\n            const sortDate = () => {\n                if (releaseDate !== nA) {\n                    return new Date(releaseDate).getTime();\n                } else return new Date(futureDate).getTime();\n            };\n            if (releaseDate !== nA) {\n                releaseDate = new Date(releaseDate).getFullYear();\n            } else {\n                releaseDate = nA;\n            }\n            return {\n                id,\n                credit_id,\n                poster_path,\n                movieTitle,\n                personCharacter,\n                releaseDate,\n                sortDate: sortDate(),\n                media_type,\n                vote_average:\n                    vote_average > 0\n                        ? `${Math.round(vote_average * 10)}%`\n                        : 'NR',\n            };\n        }\n    );\n    const result = res.sort((a, b) => b.sortDate - a.sortDate);\n\n    return result;\n};\n","export const normalizePersonInCrew = crew => {\n    const nA = 'N/a';\n    const res = crew?.map(\n        ({\n            id,\n            credit_id,\n            title,\n            original_title,\n            name,\n            original_name,\n            poster_path,\n            job,\n            release_date,\n            first_air_date,\n            vote_average,\n            media_type,\n        }) => {\n            let futureDate = new Date();\n            futureDate = new Date(\n                futureDate.getTime() + 1000 * 60 * 60 * 24 * 730\n            );\n\n            const movieTitle = title\n                ? title\n                : name\n                ? name\n                : original_title\n                ? original_title\n                : original_name;\n\n            let releaseDate = release_date\n                ? release_date\n                : first_air_date\n                ? first_air_date\n                : nA;\n\n            const sortDate = () => {\n                if (releaseDate !== nA) {\n                    return new Date(releaseDate).getTime();\n                } else return new Date(futureDate).getTime();\n            };\n            if (releaseDate !== nA) {\n                releaseDate = new Date(releaseDate).getFullYear();\n            } else {\n                releaseDate = nA;\n            }\n\n            return {\n                id,\n                credit_id,\n                poster_path,\n                movieTitle,\n                job,\n                releaseDate,\n                sortDate: sortDate(),\n                media_type,\n                vote_average:\n                    vote_average > 0\n                        ? `${Math.round(vote_average * 10)}%`\n                        : 'NR',\n            };\n        }\n    );\n\n    const sortedResByDate = res?.sort((a, b) => b.sortDate - a.sortDate);\n\n    const list = [];\n    sortedResByDate?.map(el => {\n        if (!list.includes(el.job)) {\n            return list.push(el.job);\n        } else return null;\n    });\n\n    const result = list.map(res => {\n        let result = [];\n        sortedResByDate.map(el => {\n            if (el.job === res) {\n                return result.push(el);\n            } else return null;\n        });\n        return { [res]: result };\n    });\n\n    return result;\n};\n","import {\n    Aside,\n    AsideTitle,\n    Description,\n    InfoWrapper,\n    MinorTitle,\n    PersonPhoto,\n    PersonTitle,\n    PersonWrapper,\n    PersonalInfoItem,\n    PersonalInfoList,\n    ProfileWrapper,\n} from './PersonInfo.styled';\nimport noPoster from '../../../assets/images/no-poster.jpg';\nimport { PROFILE_H632 } from 'common/constants';\nimport { Credits } from './Credits/Credits';\nimport { useTranslate } from 'hooks/useTranslate';\n\nexport const PersonInfo = ({ person, acting, crew, total }) => {\n    const {\n        biography,\n        known_for_department,\n        name,\n        gender,\n        birthday,\n        deathday,\n        place_of_birth,\n        profile_path,\n    } = person;\n\n    const { t } = useTranslate();\n\n    return (\n        <PersonWrapper>\n            <PersonTitle className=\"minor\">{name}</PersonTitle>\n            <Aside>\n                <PersonPhoto\n                    src={profile_path ? PROFILE_H632 + profile_path : noPoster}\n                    alt={name}\n                    width={300}\n                    height={450}\n                />\n                <div>\n                    <AsideTitle>{t('personalInfo')}</AsideTitle>\n                    <PersonalInfoList>\n                        <PersonalInfoItem>\n                            <MinorTitle>{t('department')}</MinorTitle>\n                            <Description>\n                                {t(known_for_department?.toLowerCase())}\n                            </Description>\n                        </PersonalInfoItem>\n                        <PersonalInfoItem>\n                            <MinorTitle>{t('knownCredits')}</MinorTitle>\n                            <p>{total}</p>\n                        </PersonalInfoItem>\n                        {gender !== 0 && (\n                            <PersonalInfoItem>\n                                <MinorTitle>{t('gender')}</MinorTitle>\n                                <Description>\n                                    {gender === 2 ? t('male') : t('female')}\n                                </Description>\n                            </PersonalInfoItem>\n                        )}\n                        {birthday && (\n                            <PersonalInfoItem>\n                                <MinorTitle>{t('birthday')}</MinorTitle>\n                                <p>{birthday}</p>\n                            </PersonalInfoItem>\n                        )}\n                        {deathday && (\n                            <PersonalInfoItem>\n                                <MinorTitle>{t('dayOfDeath')}</MinorTitle>\n                                <p>{deathday}</p>\n                            </PersonalInfoItem>\n                        )}\n                        {place_of_birth && (\n                            <PersonalInfoItem>\n                                <MinorTitle>{t('placeOfBirth')}</MinorTitle>\n                                <p>{place_of_birth}</p>\n                            </PersonalInfoItem>\n                        )}\n                    </PersonalInfoList>\n                </div>\n            </Aside>\n            <InfoWrapper>\n                <ProfileWrapper>\n                    <PersonTitle className=\"major\">{name}</PersonTitle>\n                    <MinorTitle>{t('biography')}</MinorTitle>\n                    {biography?.map((el, i) => (\n                        <p key={i} style={{ marginBottom: '12px' }}>\n                            {el}\n                        </p>\n                    ))}\n                    {biography?.length === 0 && (\n                        <p>{t('noBiography', [name, 'test'])}</p>\n                    )}\n                </ProfileWrapper>\n                <Credits acting={acting} crew={crew} />\n            </InfoWrapper>\n        </PersonWrapper>\n    );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { normalizePersonData } from 'common/services/normalize/normalizePersonData';\nimport { PersonInfo } from './PersonInfo/PersonInfo';\nimport { getDetails, getPersonById } from 'common/services/api';\nimport { Loader } from 'ui/shared/components/Loader';\nimport { Container } from 'ui/shared/layouts/Container/Container';\nimport { useSelector } from 'react-redux';\nimport { selectLang } from 'common/store/selector';\n\nconst PersonDetails = () => {\n    const lang = useSelector(selectLang);\n    const { personId } = useParams();\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [personInfo, setPersonInfo] = useState({});\n    const [personCredits, setPersonCredits] = useState([]);\n    const [crew, setCrew] = useState([]);\n    const [totalCredits, setTotalCredits] = useState(0);\n\n    useEffect(() => {\n        setIsLoading(true);\n        getPersonById(personId, lang)\n            .then(data => {\n                setPersonInfo(normalizePersonData(data, lang));\n            })\n            .catch(err => setError(err.message))\n            .finally(() => {\n                getDetails('person', personId, lang, '/combined_credits')\n                    .then(data => {\n                        setPersonCredits(data.cast);\n                        setCrew(data.crew);\n                        const length = data?.cast?.length + data?.crew?.length;\n                        setTotalCredits(length);\n                    })\n                    .catch(err => setError(err.message));\n                setIsLoading(false);\n            });\n    }, [personId, lang]);\n\n    return (\n        <section className=\"padding-top\">\n            {isLoading && <Loader />}\n            <Container>\n                {!isLoading && (\n                    <PersonInfo\n                        person={personInfo}\n                        acting={personCredits}\n                        crew={crew}\n                        total={totalCredits}\n                    />\n                )}\n            </Container>\n            {error && <p>{error}</p>}\n        </section>\n    );\n};\n\nexport default PersonDetails;\n","import { calcAge, formatDate } from '../dateOperations';\nimport { setNumberForm } from '../setNumberForm';\n\nexport const normalizePersonData = (data, language) => {\n    const {\n        id,\n        biography,\n        known_for_department,\n        name,\n        gender,\n        birthday,\n        deathday,\n        place_of_birth,\n        profile_path,\n    } = data;\n    let biographyArr = [];\n    if (biography && biography !== '') {\n        biographyArr = biography.split('\\n\\n');\n    }\n\n    let calculateAge;\n    if (birthday && !deathday) {\n        calculateAge = calcAge(birthday, new Date());\n    }\n    if (deathday) {\n        calculateAge = calcAge(birthday, deathday);\n    }\n\n    let isBirthDay;\n    let isDeathDay;\n\n    if (birthday) {\n        if (!deathday) {\n            isBirthDay = `${formatDate(\n                birthday,\n                language\n            )} (${calculateAge} ${setNumberForm(calculateAge, language)})`;\n        } else isBirthDay = formatDate(birthday, language);\n    } else isBirthDay = null;\n\n    if (deathday) {\n        isDeathDay = `${formatDate(\n            deathday,\n            language\n        )} (${calculateAge} ${setNumberForm(calculateAge, language)})`;\n    } else isDeathDay = null;\n\n    return {\n        id,\n        biography: biographyArr,\n        known_for_department,\n        name,\n        gender,\n        birthday: isBirthDay,\n        deathday: isDeathDay,\n        place_of_birth,\n        profile_path,\n    };\n};\n"],"names":["setNumberForm","n","language","PersonWrapper","styled","theme","colors","themeText","breakpoints","l","PersonTitle","Aside","spacing","retreatS","mediumBackground","fromXsTillL","s","retreatM","xl","retreatL","PersonPhoto","xs","AsideTitle","PersonalInfoList","PersonalInfoItem","MinorTitle","Description","InfoWrapper","ProfileWrapper","Title","CreditsList","Item","StyledLink","Link","ImageWrapper","CreditsItem","credits","t","useTranslate","map","id","credit_id","poster_path","movieTitle","personCharacter","releaseDate","media_type","vote_average","to","state","mediaTypes","style","aspectRatio","objectFit","width","height","src","POSTER_W185","noPoster","alt","Credits","acting","crew","personActing","data","nA","futureDate","Date","getTime","title","original_title","name","original_name","character","release_date","first_air_date","getFullYear","sortDate","Math","round","sort","a","b","normalizeActing","personInCrew","res","job","sortedResByDate","list","el","includes","push","result","normalizePersonInCrew","length","i","Object","keys","PersonInfo","person","total","biography","known_for_department","gender","birthday","deathday","place_of_birth","profile_path","className","PROFILE_H632","toLowerCase","marginBottom","lang","useSelector","selectLang","personId","useParams","useState","isLoading","setIsLoading","error","setError","personInfo","setPersonInfo","personCredits","setPersonCredits","setCrew","totalCredits","setTotalCredits","useEffect","getPersonById","then","calculateAge","biographyArr","split","calcAge","formatDate","normalizePersonData","catch","err","message","finally","getDetails","cast","Loader","Container"],"sourceRoot":""}